{"version":3,"sources":["Home.tsx","apps/fake_store/comps/Cart.tsx","apps/fake_store/comps/CartItem.tsx","apps/fake_store/comps/Drawer.tsx","apps/fake_store/comps/Product.tsx","apps/fake_store/comps/Products.tsx","apps/fake_store/App.tsx","apps/fake_store/index.tsx","apps/pokemon_search/index.tsx","apps/others/index.tsx","components/Navbar.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Home","className","to","Cart","products","handleClick","onClick","length","CartItem","Drawer","show","children","useState","showDrawer","setShowDrawer","useEffect","Product","product","handleAddToCart","src","image","alt","title","description","substring","price","Products","map","id","getProducts","a","fetch","json","App","cartItem","setCartItem","useQuery","data","isLoading","error","console","log","isProductAlrAdded","find","productOnCart","prevState","row","amount","client","QueryClient","index","QueryClientProvider","Navbar","path","component","FakeStore","PokemonSearch","Others","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc978238.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\n\r\nconst Home = () => {\r\n    return <div className=\"main-menu\">\r\n        <Link to=\"/fake-store\">Fake Store</Link><br />\r\n        <Link to=\"/pokemon-search\">Pokemon Search</Link><br />\r\n        <Link to=\"/todo-context-reducer-typescript\">Todo (Context, Reducer, TS)</Link><br />\r\n        <Link to=\"/tirtagracia\">Tirtagracia</Link><br />\r\n        <Link to=\"/others\">Others</Link>\r\n    </div>\r\n}\r\n\r\nexport default Home","import { cartItemType } from \"../types\"\r\n\r\ntype Props = {\r\n    products: cartItemType[],\r\n    handleClick: () => void,\r\n}\r\n\r\nconst Cart:React.FC<Props> = ({products, handleClick}) => {\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleClick}>Cart ({products.length})</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n\r\n","import { cartItemType } from \"../types\"\r\n\r\ntype Props = {\r\n    products: cartItemType[]\r\n}\r\n\r\nconst CartItem:React.FC<Props> = ({ products }) => {\r\n\r\n\r\n    return <div>\r\n        im your cart item\r\n    </div>\r\n}\r\n\r\n\r\nexport default CartItem","import React, {useState, useEffect, ReactNode} from 'react'\r\n\r\ntype Props = {\r\n    show: boolean,\r\n    children: ReactNode\r\n}\r\n\r\nconst Drawer:React.FC<Props> = ({ show, children }) => {\r\n\r\n    const [showDrawer, setShowDrawer] = useState<boolean>(show)\r\n\r\n    useEffect(() => {\r\n        setShowDrawer(show)\r\n    }, [show, showDrawer])\r\n\r\n    return (\r\n        <div className={`drawer ${ showDrawer ? 'show':'' } `}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawer","import { cartItemType } from \"../types\"\r\n\r\ntype Props = {\r\n    product: cartItemType,\r\n    handleAddToCart: (id: cartItemType) => void\r\n}\r\n\r\nconst Product:React.FC<Props> = ({ product, handleAddToCart }) => {\r\n    return (\r\n        <div className=\"product-item\">\r\n            <div className=\"img\">\r\n                <img src={product.image} alt=\"\"/>\r\n            </div>\r\n            <div className=\"bottom\">\r\n                <p className=\"title\">{product.title}</p>\r\n                <p className=\"desc\">{product.description.substring(0, 50)}...</p>\r\n                <p className=\"price\">USD {product.price}</p>\r\n                <button onClick={() => handleAddToCart(product)}>+ Add to Cart</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import { cartItemType } from \"../types\"\r\nimport Product from \"./Product\"\r\n\r\ntype Props = {\r\n    products: cartItemType[] | undefined,\r\n    handleAddToCart: (id: cartItemType) => void\r\n}\r\n\r\nconst Products:React.FC<Props> = ({ products, handleAddToCart }) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"products\">\r\n\r\n            <h3 className=\"text-center\">List of Products</h3>\r\n            <br/>\r\n\r\n            <div className=\"product-list\">\r\n                {\r\n                    products?.map( product => (\r\n                        <Product\r\n                            key={product.id}\r\n                            handleAddToCart={handleAddToCart}\r\n                            product={product} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products","import {useState} from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport Cart from './comps/Cart'\r\nimport {default as CartItemComp} from './comps/CartItem'\r\nimport Drawer from './comps/Drawer'\r\nimport Products from './comps/Products'\r\nimport { cartItemType } from './types'\r\n\r\nconst url = 'https://fakestoreapi.com/products'\r\nconst getProducts = async ():Promise<cartItemType[]> => await (await fetch(url)).json()\r\n\r\nconst App = () => {\r\n\r\n    const [cartItem, setCartItem] = useState<cartItemType[]>([])\r\n    const { data, isLoading, error } = useQuery('products', getProducts)\r\n    const [showDrawer, setShowDrawer] = useState<boolean>(false)\r\n\r\n    if(isLoading) return <i>Loading ... </i>\r\n    if(error) return <i>error ...</i>\r\n\r\n     const handleAddToCart = (product: cartItemType) => {\r\n\r\n        const isProductAlrAdded = cartItem.find(productOnCart => productOnCart.id === product.id)\r\n\r\n        if(isProductAlrAdded) {\r\n            setCartItem( prevState => {\r\n                return cartItem.map( row => {\r\n                    if(row.id === product.id)\r\n                    row.amount = row.amount + 1;\r\n\r\n                    return row;\r\n                })\r\n            })\r\n        }else {\r\n            setCartItem([...cartItem, product]);\r\n        }\r\n\r\n    }\r\n\r\n    console.log(showDrawer);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Cart handleClick={()=>setShowDrawer(!showDrawer)} products={cartItem} />\r\n            <Drawer show={showDrawer}>\r\n                <CartItemComp products={cartItem} />\r\n            </Drawer>\r\n            <Products handleAddToCart={handleAddToCart} products={data} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import { QueryClient, QueryClientProvider } from \"react-query\"\r\nimport App from './App'\r\n\r\nconst client = new QueryClient();\r\n\r\nconst index = () =>  {\r\n    return (\r\n        <QueryClientProvider client={client}>\r\n            <App />\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nexport default index","import React from 'react'\r\n\r\nexport default function index() {\r\n    return (\r\n        <div>\r\n            pokemon search\r\n        </div>\r\n    )\r\n}\r\n","const index  = () => {\r\n    return (\r\n        <div>\r\n            Others\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default index","import { Link } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>RionaLab</h1>\r\n            <Link to=\"/\">Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React  from 'react'\nimport Home from './Home';\nimport {default as FakeStore } from 'apps/fake_store'\nimport {default as PokemonSearch } from 'apps/pokemon_search'\nimport {default as Others } from 'apps/others/index'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './app.scss'\nimport Navbar from 'components/Navbar';\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n\n            <BrowserRouter>\n                <Navbar />\n                <div className=\"container\">\n                    <Switch>\n                        <Route path=\"/fake-store\" component={FakeStore} />\n                        <Route path=\"/pokemon-search\" component={PokemonSearch} />\n                        <Route path=\"/others\" component={Others} />\n                        <Route path=\"/\" component={Home} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}